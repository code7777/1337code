#include <iostream>
#include <vector>
#include <unordered_map>

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int length = nums.size();
        int k = length;
        //std:: cout << length;
        map < int, int > m;
        int count = 0;
        
        for(int i = 0; i < length; i++){
            
             if( m.find(nums[i]) != m.end()){
                
                m[nums[i]]++;
                
                nums.erase(nums.begin()+nums[i]);
                k--;
            }
            
            if( m.find(nums[i]) == m.end()){
              m[nums[i]]=1;
            }
           
            
        }
          // Iterate over key-value pairs
        for (const auto & pair: m) {
            cout << "Key: " << pair.first << ", Value: " << pair.second << endl;
        }
        
        
         
        for(int i = 0; i < length; i++){
            cout << nums[i] << endl ;
        }
        
        return k;
    }
};
